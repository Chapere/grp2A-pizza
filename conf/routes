# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                    controllers.Application.index

POST        /createOrder         controllers.OrderController.createOrder

POST        /addUser             controllers.UserController.addUser
POST        /addEmployee         controllers.EmployeeController.addEmployee
POST        /chooseEmployee      controllers.EmployeeController.chooseEmployee
POST        /updateEmployee      controllers.EmployeeController.updateEmployee
POST        /logInUser           controllers.UserController.logInUser
POST        /logInEmployee       controllers.EmployeeController.logInEmployee
POST        /chooseUser          controllers.UserController.chooseUser
POST        /updateUser          controllers.UserController.updateUser
POST        /rmUser              controllers.UserController.rmUser
GET         /registerUser        controllers.UserController.registerUser
GET         /registerEmployee    controllers.EmployeeController.registerEmployee
GET         /products            controllers.PizzaController.products
GET         /orders              controllers.OrderController.orders


GET         /showUsers           controllers.UserController.showUsers
GET         /newUserCreated      controllers.UserController.newUserCreated(username, lastname, adress, city, plz, email, password)
GET         /userLoggedIn        controllers.UserController.completeLogInUser(id: Long, name)
GET         /upgradeUser         controllers.UserController.upgradeUser(name, lastname, adress, city, plz, email, password)
GET         /changeUser          controllers.UserController.changeUser1(id: Long, name, lastname, adress, city, plz, email, password)
GET         /userDeleted         controllers.UserController.userDeleted(deleted: Boolean)


GET         /showEmployees       controllers.EmployeeController.showEmployees
GET         /newEmployeeCreated  controllers.EmployeeController.newEmployeeCreated(name, lastname, workplace, acces, accesLevel: Int, netRate: Double, email, password)
GET         /changeEmployee      controllers.EmployeeController.changeEmployee(id: Long, name, lastname, workplace, acces, accesLevel: Int, netRate: Double, email, password)
GET         /upgradeEmployee     controllers.EmployeeController.upgradeEmployee(name, lastname, workplace, acces, accesLevel: Int, netRate: Double, email, password)
GET         /employeeLoggedIn    controllers.EmployeeController.completeLogInEmployee(id: Long, name)

GET         /newOrderCreated     controllers.OrderController.newOrderCreated(price: Double)

GET         /logout              controllers.Application.logOut



# REST API
GET         /api                 rest.Api.api
GET         /api/users           rest.Users.users
GET         /api/user/:id        rest.Users.user(id: Long)
GET         /api/pizzas          rest.Pizzas.pizzas
GET         /api/pizza/:id       rest.Pizzas.pizza(id: Long)
GET         /api/orders          rest.Orders.orders
GET         /api/order/:id       rest.Orders.order(id: Long)
GET         /api/employees       rest.Employees.employees
GET         /api/employee/:id    rest.Employees.employee(id: Long)
POST        /api/employee        rest.Employees.addEmployee
POST        /api/order           rest.Orders.addOrder
POST        /api/pizza           rest.Pizzas.addPizza
POST        /api/user            rest.Users.addUser
DELETE      /api/user/:id        rest.Users.rmUser(id: Long)
DELETE      /api/pizza/:id       rest.Pizzas.rmPizza(id: Long)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file        controllers.Assets.versioned(path="/public", file: Asset)